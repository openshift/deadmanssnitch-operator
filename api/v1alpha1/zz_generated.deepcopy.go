//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDeploymentAnnotationsToSkip) DeepCopyInto(out *ClusterDeploymentAnnotationsToSkip) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDeploymentAnnotationsToSkip.
func (in *ClusterDeploymentAnnotationsToSkip) DeepCopy() *ClusterDeploymentAnnotationsToSkip {
	if in == nil {
		return nil
	}
	out := new(ClusterDeploymentAnnotationsToSkip)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadmansSnitchIntegration) DeepCopyInto(out *DeadmansSnitchIntegration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadmansSnitchIntegration.
func (in *DeadmansSnitchIntegration) DeepCopy() *DeadmansSnitchIntegration {
	if in == nil {
		return nil
	}
	out := new(DeadmansSnitchIntegration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeadmansSnitchIntegration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadmansSnitchIntegrationList) DeepCopyInto(out *DeadmansSnitchIntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DeadmansSnitchIntegration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadmansSnitchIntegrationList.
func (in *DeadmansSnitchIntegrationList) DeepCopy() *DeadmansSnitchIntegrationList {
	if in == nil {
		return nil
	}
	out := new(DeadmansSnitchIntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeadmansSnitchIntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadmansSnitchIntegrationSpec) DeepCopyInto(out *DeadmansSnitchIntegrationSpec) {
	*out = *in
	out.DmsAPIKeySecretRef = in.DmsAPIKeySecretRef
	in.ClusterDeploymentSelector.DeepCopyInto(&out.ClusterDeploymentSelector)
	if in.ClusterDeploymentAnnotationsToSkip != nil {
		in, out := &in.ClusterDeploymentAnnotationsToSkip, &out.ClusterDeploymentAnnotationsToSkip
		*out = make([]ClusterDeploymentAnnotationsToSkip, len(*in))
		copy(*out, *in)
	}
	out.TargetSecretRef = in.TargetSecretRef
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadmansSnitchIntegrationSpec.
func (in *DeadmansSnitchIntegrationSpec) DeepCopy() *DeadmansSnitchIntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(DeadmansSnitchIntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeadmansSnitchIntegrationStatus) DeepCopyInto(out *DeadmansSnitchIntegrationStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeadmansSnitchIntegrationStatus.
func (in *DeadmansSnitchIntegrationStatus) DeepCopy() *DeadmansSnitchIntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(DeadmansSnitchIntegrationStatus)
	in.DeepCopyInto(out)
	return out
}
